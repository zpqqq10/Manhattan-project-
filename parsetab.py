
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COLUMN COMMA CREATE END EQUAL FROM INSERT INTO LFPARENTH RGPARENTH SELECT SET STAR TABLE UPDATE VALUES WHEREexpressions : expression\n                    | expressions expressionexpression :  exp_select\n                    | exp_create\n                    | exp_insert\n                    | exp_updateexp_select : SELECT columns FROM COLUMN END\n                    | SELECT STAR FROM COLUMN ENDexp_create : CREATE TABLE COLUMN LFPARENTH columns RGPARENTH ENDexp_insert : INSERT INTO COLUMN exp_insert_endexp_update : UPDATE COLUMN SET exp_update_colums WHERE exp_update_condition ENDexp_update_colums : COLUMN EQUAL COLUMN\n                         | COLUMN EQUAL COLUMN COMMA exp_update_columsexp_update_condition : COLUMN EQUAL COLUMN\n                            | COLUMN EQUAL COLUMN AND exp_update_conditionexp_insert_end : VALUES LFPARENTH columns RGPARENTH END\n                      | LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH ENDcolumns : COLUMN\n               | COLUMN COMMA columns'
    
_lr_action_items = {'SELECT':([0,1,2,3,4,5,6,11,28,33,34,46,51,52,60,],[7,7,-1,-3,-4,-5,-6,-2,-10,-7,-8,-9,-11,-16,-17,]),'CREATE':([0,1,2,3,4,5,6,11,28,33,34,46,51,52,60,],[8,8,-1,-3,-4,-5,-6,-2,-10,-7,-8,-9,-11,-16,-17,]),'INSERT':([0,1,2,3,4,5,6,11,28,33,34,46,51,52,60,],[9,9,-1,-3,-4,-5,-6,-2,-10,-7,-8,-9,-11,-16,-17,]),'UPDATE':([0,1,2,3,4,5,6,11,28,33,34,46,51,52,60,],[10,10,-1,-3,-4,-5,-6,-2,-10,-7,-8,-9,-11,-16,-17,]),'$end':([1,2,3,4,5,6,11,28,33,34,46,51,52,60,],[0,-1,-3,-4,-5,-6,-2,-10,-7,-8,-9,-11,-16,-17,]),'STAR':([7,],[14,]),'COLUMN':([7,10,15,16,18,19,20,23,27,30,36,38,39,49,50,53,57,],[13,17,21,22,24,13,26,31,13,13,13,43,44,31,55,13,44,]),'TABLE':([8,],[15,]),'INTO':([9,],[16,]),'FROM':([12,13,14,25,],[18,-18,20,-19,]),'RGPARENTH':([13,25,35,37,41,56,],[-18,-19,40,42,47,58,]),'COMMA':([13,43,],[19,49,]),'SET':([17,],[23,]),'LFPARENTH':([21,22,29,48,],[27,30,36,53,]),'VALUES':([22,42,],[29,48,]),'END':([24,26,40,45,47,55,58,59,],[33,34,46,51,52,-14,60,-15,]),'EQUAL':([31,44,],[38,50,]),'WHERE':([32,43,54,],[39,-12,-13,]),'AND':([55,],[57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,],[1,]),'expression':([0,1,],[2,11,]),'exp_select':([0,1,],[3,3,]),'exp_create':([0,1,],[4,4,]),'exp_insert':([0,1,],[5,5,]),'exp_update':([0,1,],[6,6,]),'columns':([7,19,27,30,36,53,],[12,25,35,37,41,56,]),'exp_insert_end':([22,],[28,]),'exp_update_colums':([23,49,],[32,54,]),'exp_update_condition':([39,57,],[45,59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expression','expressions',1,'p_statement_expr','interpreter.py',300),
  ('expressions -> expressions expression','expressions',2,'p_statement_expr','interpreter.py',301),
  ('expression -> exp_select','expression',1,'p_expression_start','interpreter.py',308),
  ('expression -> exp_create','expression',1,'p_expression_start','interpreter.py',309),
  ('expression -> exp_insert','expression',1,'p_expression_start','interpreter.py',310),
  ('expression -> exp_update','expression',1,'p_expression_start','interpreter.py',311),
  ('exp_select -> SELECT columns FROM COLUMN END','exp_select',5,'p_expression_select','interpreter.py',315),
  ('exp_select -> SELECT STAR FROM COLUMN END','exp_select',5,'p_expression_select','interpreter.py',316),
  ('exp_create -> CREATE TABLE COLUMN LFPARENTH columns RGPARENTH END','exp_create',7,'p_expression_create','interpreter.py',328),
  ('exp_insert -> INSERT INTO COLUMN exp_insert_end','exp_insert',4,'p_expression_insert','interpreter.py',340),
  ('exp_update -> UPDATE COLUMN SET exp_update_colums WHERE exp_update_condition END','exp_update',7,'p_expression_update','interpreter.py',353),
  ('exp_update_colums -> COLUMN EQUAL COLUMN','exp_update_colums',3,'p_expression_update_columns','interpreter.py',365),
  ('exp_update_colums -> COLUMN EQUAL COLUMN COMMA exp_update_colums','exp_update_colums',5,'p_expression_update_columns','interpreter.py',366),
  ('exp_update_condition -> COLUMN EQUAL COLUMN','exp_update_condition',3,'p_expression_update_condition','interpreter.py',372),
  ('exp_update_condition -> COLUMN EQUAL COLUMN AND exp_update_condition','exp_update_condition',5,'p_expression_update_condition','interpreter.py',373),
  ('exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END','exp_insert_end',5,'p_expresssion_insert_end','interpreter.py',378),
  ('exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END','exp_insert_end',8,'p_expresssion_insert_end','interpreter.py',379),
  ('columns -> COLUMN','columns',1,'p_expression_columns','interpreter.py',385),
  ('columns -> COLUMN COMMA columns','columns',3,'p_expression_columns','interpreter.py',386),
]
