Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expressions
Rule 1     expressions -> expression
Rule 2     expressions -> expressions expression
Rule 3     expressions -> exp_exit
Rule 4     expression -> exp_select
Rule 5     expression -> exp_create_table
Rule 6     expression -> exp_create_index
Rule 7     expression -> exp_insert
Rule 8     expression -> exp_drop_table
Rule 9     expression -> exp_drop_index
Rule 10    expression -> exp_delete
Rule 11    expression -> exp_execfile
Rule 12    expression -> exp_help
Rule 13    expression -> exp_show
Rule 14    expression -> exp_update
Rule 15    expression -> exp_import
Rule 16    exp_exit -> EXIT END
Rule 17    exp_update -> UPDATE COLUMN SET exp_assign END
Rule 18    exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END
Rule 19    exp_drop_table -> DROP TABLE COLUMN END
Rule 20    exp_assign -> COLUMN EQUAL COLUMN
Rule 21    exp_assign -> COLUMN EQUAL COLUMN COMMA exp_assign
Rule 22    exp_drop_index -> DROP INDEX COLUMN END
Rule 23    exp_delete -> DELETE FROM COLUMN END
Rule 24    exp_delete -> DELETE FROM COLUMN WHERE exp_condition END
Rule 25    exp_select -> SELECT columns FROM COLUMN END
Rule 26    exp_select -> SELECT STAR FROM COLUMN END
Rule 27    exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END
Rule 28    exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END
Rule 29    exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
Rule 30    exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END
Rule 31    exp_attributes -> exp_attribute
Rule 32    exp_attributes -> exp_attributes COMMA exp_attribute
Rule 33    exp_attribute -> COLUMN TYPE
Rule 34    exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH
Rule 35    exp_attribute -> COLUMN TYPE UNIQUE
Rule 36    exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE
Rule 37    exp_insert -> INSERT INTO COLUMN exp_insert_end
Rule 38    exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
Rule 39    exp_condition -> COLUMN OP COLUMN
Rule 40    exp_condition -> COLUMN OP COLUMN AND exp_condition
Rule 41    exp_condition -> COLUMN EQUAL COLUMN
Rule 42    exp_condition -> COLUMN EQUAL COLUMN AND exp_condition
Rule 43    exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END
Rule 44    exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END
Rule 45    columns -> COLUMN
Rule 46    columns -> COLUMN COMMA columns
Rule 47    exp_show -> SHOW END
Rule 48    exp_execfile -> EXECFILE COLUMN END
Rule 49    exp_help -> HELP END

Terminals, with rules where they appear

AND                  : 40 42
CHAR                 : 34 36
COLUMN               : 17 18 19 20 20 21 21 22 23 24 25 26 27 28 29 29 30 30 30 33 34 34 35 36 36 37 38 38 38 39 39 40 40 41 41 42 42 45 46 48
COMMA                : 21 29 32 38 46
CREATE               : 29 30
DELETE               : 23 24
DROP                 : 19 22
END                  : 16 17 18 19 22 23 24 25 26 27 28 29 30 38 43 44 47 48 49
EQUAL                : 20 21 41 42
EXECFILE             : 48
EXIT                 : 16
FROM                 : 23 24 25 26 27 28 38
HELP                 : 49
IMPORT               : 38
INDEX                : 22 30
INSERT               : 37
INTO                 : 37
KEY                  : 29 38
LFPARENTH            : 29 29 30 34 36 38 38 43 44 44
ON                   : 30
OP                   : 39 40
PRIMARY              : 29 38
RGPARENTH            : 29 29 30 34 36 38 38 43 44 44
SELECT               : 25 26 27 28
SET                  : 17 18
SHOW                 : 47
STAR                 : 26 27
TABLE                : 19 29
TYPE                 : 33 35
UNIQUE               : 35 36
UPDATE               : 17 18
VALUES               : 43 44
WHERE                : 18 24 27 28
error                : 

Nonterminals, with rules where they appear

columns              : 25 28 43 44 44 46
exp_assign           : 17 18 21
exp_attribute        : 31 32
exp_attributes       : 29 32 38
exp_condition        : 18 24 27 28 40 42
exp_create_index     : 6
exp_create_table     : 5
exp_delete           : 10
exp_drop_index       : 9
exp_drop_table       : 8
exp_execfile         : 11
exp_exit             : 3
exp_help             : 12
exp_import           : 15
exp_insert           : 7
exp_insert_end       : 37
exp_select           : 4
exp_show             : 13
exp_update           : 14
expression           : 1 2
expressions          : 2 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (1) expressions -> . expression
    (2) expressions -> . expressions expression
    (3) expressions -> . exp_exit
    (4) expression -> . exp_select
    (5) expression -> . exp_create_table
    (6) expression -> . exp_create_index
    (7) expression -> . exp_insert
    (8) expression -> . exp_drop_table
    (9) expression -> . exp_drop_index
    (10) expression -> . exp_delete
    (11) expression -> . exp_execfile
    (12) expression -> . exp_help
    (13) expression -> . exp_show
    (14) expression -> . exp_update
    (15) expression -> . exp_import
    (16) exp_exit -> . EXIT END
    (25) exp_select -> . SELECT columns FROM COLUMN END
    (26) exp_select -> . SELECT STAR FROM COLUMN END
    (27) exp_select -> . SELECT STAR FROM COLUMN WHERE exp_condition END
    (28) exp_select -> . SELECT columns FROM COLUMN WHERE exp_condition END
    (29) exp_create_table -> . CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (30) exp_create_index -> . CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END
    (37) exp_insert -> . INSERT INTO COLUMN exp_insert_end
    (19) exp_drop_table -> . DROP TABLE COLUMN END
    (22) exp_drop_index -> . DROP INDEX COLUMN END
    (23) exp_delete -> . DELETE FROM COLUMN END
    (24) exp_delete -> . DELETE FROM COLUMN WHERE exp_condition END
    (48) exp_execfile -> . EXECFILE COLUMN END
    (49) exp_help -> . HELP END
    (47) exp_show -> . SHOW END
    (17) exp_update -> . UPDATE COLUMN SET exp_assign END
    (18) exp_update -> . UPDATE COLUMN SET exp_assign WHERE exp_condition END
    (38) exp_import -> . IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    EXIT            shift and go to state 16
    SELECT          shift and go to state 17
    CREATE          shift and go to state 18
    INSERT          shift and go to state 19
    DROP            shift and go to state 20
    DELETE          shift and go to state 21
    EXECFILE        shift and go to state 22
    HELP            shift and go to state 23
    SHOW            shift and go to state 24
    UPDATE          shift and go to state 25
    IMPORT          shift and go to state 26

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    exp_exit                       shift and go to state 3
    exp_select                     shift and go to state 4
    exp_create_table               shift and go to state 5
    exp_create_index               shift and go to state 6
    exp_insert                     shift and go to state 7
    exp_drop_table                 shift and go to state 8
    exp_drop_index                 shift and go to state 9
    exp_delete                     shift and go to state 10
    exp_execfile                   shift and go to state 11
    exp_help                       shift and go to state 12
    exp_show                       shift and go to state 13
    exp_update                     shift and go to state 14
    exp_import                     shift and go to state 15

state 1

    (0) S' -> expressions .
    (2) expressions -> expressions . expression
    (4) expression -> . exp_select
    (5) expression -> . exp_create_table
    (6) expression -> . exp_create_index
    (7) expression -> . exp_insert
    (8) expression -> . exp_drop_table
    (9) expression -> . exp_drop_index
    (10) expression -> . exp_delete
    (11) expression -> . exp_execfile
    (12) expression -> . exp_help
    (13) expression -> . exp_show
    (14) expression -> . exp_update
    (15) expression -> . exp_import
    (25) exp_select -> . SELECT columns FROM COLUMN END
    (26) exp_select -> . SELECT STAR FROM COLUMN END
    (27) exp_select -> . SELECT STAR FROM COLUMN WHERE exp_condition END
    (28) exp_select -> . SELECT columns FROM COLUMN WHERE exp_condition END
    (29) exp_create_table -> . CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (30) exp_create_index -> . CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END
    (37) exp_insert -> . INSERT INTO COLUMN exp_insert_end
    (19) exp_drop_table -> . DROP TABLE COLUMN END
    (22) exp_drop_index -> . DROP INDEX COLUMN END
    (23) exp_delete -> . DELETE FROM COLUMN END
    (24) exp_delete -> . DELETE FROM COLUMN WHERE exp_condition END
    (48) exp_execfile -> . EXECFILE COLUMN END
    (49) exp_help -> . HELP END
    (47) exp_show -> . SHOW END
    (17) exp_update -> . UPDATE COLUMN SET exp_assign END
    (18) exp_update -> . UPDATE COLUMN SET exp_assign WHERE exp_condition END
    (38) exp_import -> . IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    SELECT          shift and go to state 17
    CREATE          shift and go to state 18
    INSERT          shift and go to state 19
    DROP            shift and go to state 20
    DELETE          shift and go to state 21
    EXECFILE        shift and go to state 22
    HELP            shift and go to state 23
    SHOW            shift and go to state 24
    UPDATE          shift and go to state 25
    IMPORT          shift and go to state 26

    expression                     shift and go to state 27
    exp_select                     shift and go to state 4
    exp_create_table               shift and go to state 5
    exp_create_index               shift and go to state 6
    exp_insert                     shift and go to state 7
    exp_drop_table                 shift and go to state 8
    exp_drop_index                 shift and go to state 9
    exp_delete                     shift and go to state 10
    exp_execfile                   shift and go to state 11
    exp_help                       shift and go to state 12
    exp_show                       shift and go to state 13
    exp_update                     shift and go to state 14
    exp_import                     shift and go to state 15

state 2

    (1) expressions -> expression .

    SELECT          reduce using rule 1 (expressions -> expression .)
    CREATE          reduce using rule 1 (expressions -> expression .)
    INSERT          reduce using rule 1 (expressions -> expression .)
    DROP            reduce using rule 1 (expressions -> expression .)
    DELETE          reduce using rule 1 (expressions -> expression .)
    EXECFILE        reduce using rule 1 (expressions -> expression .)
    HELP            reduce using rule 1 (expressions -> expression .)
    SHOW            reduce using rule 1 (expressions -> expression .)
    UPDATE          reduce using rule 1 (expressions -> expression .)
    IMPORT          reduce using rule 1 (expressions -> expression .)
    $end            reduce using rule 1 (expressions -> expression .)


state 3

    (3) expressions -> exp_exit .

    SELECT          reduce using rule 3 (expressions -> exp_exit .)
    CREATE          reduce using rule 3 (expressions -> exp_exit .)
    INSERT          reduce using rule 3 (expressions -> exp_exit .)
    DROP            reduce using rule 3 (expressions -> exp_exit .)
    DELETE          reduce using rule 3 (expressions -> exp_exit .)
    EXECFILE        reduce using rule 3 (expressions -> exp_exit .)
    HELP            reduce using rule 3 (expressions -> exp_exit .)
    SHOW            reduce using rule 3 (expressions -> exp_exit .)
    UPDATE          reduce using rule 3 (expressions -> exp_exit .)
    IMPORT          reduce using rule 3 (expressions -> exp_exit .)
    $end            reduce using rule 3 (expressions -> exp_exit .)


state 4

    (4) expression -> exp_select .

    SELECT          reduce using rule 4 (expression -> exp_select .)
    CREATE          reduce using rule 4 (expression -> exp_select .)
    INSERT          reduce using rule 4 (expression -> exp_select .)
    DROP            reduce using rule 4 (expression -> exp_select .)
    DELETE          reduce using rule 4 (expression -> exp_select .)
    EXECFILE        reduce using rule 4 (expression -> exp_select .)
    HELP            reduce using rule 4 (expression -> exp_select .)
    SHOW            reduce using rule 4 (expression -> exp_select .)
    UPDATE          reduce using rule 4 (expression -> exp_select .)
    IMPORT          reduce using rule 4 (expression -> exp_select .)
    $end            reduce using rule 4 (expression -> exp_select .)


state 5

    (5) expression -> exp_create_table .

    SELECT          reduce using rule 5 (expression -> exp_create_table .)
    CREATE          reduce using rule 5 (expression -> exp_create_table .)
    INSERT          reduce using rule 5 (expression -> exp_create_table .)
    DROP            reduce using rule 5 (expression -> exp_create_table .)
    DELETE          reduce using rule 5 (expression -> exp_create_table .)
    EXECFILE        reduce using rule 5 (expression -> exp_create_table .)
    HELP            reduce using rule 5 (expression -> exp_create_table .)
    SHOW            reduce using rule 5 (expression -> exp_create_table .)
    UPDATE          reduce using rule 5 (expression -> exp_create_table .)
    IMPORT          reduce using rule 5 (expression -> exp_create_table .)
    $end            reduce using rule 5 (expression -> exp_create_table .)


state 6

    (6) expression -> exp_create_index .

    SELECT          reduce using rule 6 (expression -> exp_create_index .)
    CREATE          reduce using rule 6 (expression -> exp_create_index .)
    INSERT          reduce using rule 6 (expression -> exp_create_index .)
    DROP            reduce using rule 6 (expression -> exp_create_index .)
    DELETE          reduce using rule 6 (expression -> exp_create_index .)
    EXECFILE        reduce using rule 6 (expression -> exp_create_index .)
    HELP            reduce using rule 6 (expression -> exp_create_index .)
    SHOW            reduce using rule 6 (expression -> exp_create_index .)
    UPDATE          reduce using rule 6 (expression -> exp_create_index .)
    IMPORT          reduce using rule 6 (expression -> exp_create_index .)
    $end            reduce using rule 6 (expression -> exp_create_index .)


state 7

    (7) expression -> exp_insert .

    SELECT          reduce using rule 7 (expression -> exp_insert .)
    CREATE          reduce using rule 7 (expression -> exp_insert .)
    INSERT          reduce using rule 7 (expression -> exp_insert .)
    DROP            reduce using rule 7 (expression -> exp_insert .)
    DELETE          reduce using rule 7 (expression -> exp_insert .)
    EXECFILE        reduce using rule 7 (expression -> exp_insert .)
    HELP            reduce using rule 7 (expression -> exp_insert .)
    SHOW            reduce using rule 7 (expression -> exp_insert .)
    UPDATE          reduce using rule 7 (expression -> exp_insert .)
    IMPORT          reduce using rule 7 (expression -> exp_insert .)
    $end            reduce using rule 7 (expression -> exp_insert .)


state 8

    (8) expression -> exp_drop_table .

    SELECT          reduce using rule 8 (expression -> exp_drop_table .)
    CREATE          reduce using rule 8 (expression -> exp_drop_table .)
    INSERT          reduce using rule 8 (expression -> exp_drop_table .)
    DROP            reduce using rule 8 (expression -> exp_drop_table .)
    DELETE          reduce using rule 8 (expression -> exp_drop_table .)
    EXECFILE        reduce using rule 8 (expression -> exp_drop_table .)
    HELP            reduce using rule 8 (expression -> exp_drop_table .)
    SHOW            reduce using rule 8 (expression -> exp_drop_table .)
    UPDATE          reduce using rule 8 (expression -> exp_drop_table .)
    IMPORT          reduce using rule 8 (expression -> exp_drop_table .)
    $end            reduce using rule 8 (expression -> exp_drop_table .)


state 9

    (9) expression -> exp_drop_index .

    SELECT          reduce using rule 9 (expression -> exp_drop_index .)
    CREATE          reduce using rule 9 (expression -> exp_drop_index .)
    INSERT          reduce using rule 9 (expression -> exp_drop_index .)
    DROP            reduce using rule 9 (expression -> exp_drop_index .)
    DELETE          reduce using rule 9 (expression -> exp_drop_index .)
    EXECFILE        reduce using rule 9 (expression -> exp_drop_index .)
    HELP            reduce using rule 9 (expression -> exp_drop_index .)
    SHOW            reduce using rule 9 (expression -> exp_drop_index .)
    UPDATE          reduce using rule 9 (expression -> exp_drop_index .)
    IMPORT          reduce using rule 9 (expression -> exp_drop_index .)
    $end            reduce using rule 9 (expression -> exp_drop_index .)


state 10

    (10) expression -> exp_delete .

    SELECT          reduce using rule 10 (expression -> exp_delete .)
    CREATE          reduce using rule 10 (expression -> exp_delete .)
    INSERT          reduce using rule 10 (expression -> exp_delete .)
    DROP            reduce using rule 10 (expression -> exp_delete .)
    DELETE          reduce using rule 10 (expression -> exp_delete .)
    EXECFILE        reduce using rule 10 (expression -> exp_delete .)
    HELP            reduce using rule 10 (expression -> exp_delete .)
    SHOW            reduce using rule 10 (expression -> exp_delete .)
    UPDATE          reduce using rule 10 (expression -> exp_delete .)
    IMPORT          reduce using rule 10 (expression -> exp_delete .)
    $end            reduce using rule 10 (expression -> exp_delete .)


state 11

    (11) expression -> exp_execfile .

    SELECT          reduce using rule 11 (expression -> exp_execfile .)
    CREATE          reduce using rule 11 (expression -> exp_execfile .)
    INSERT          reduce using rule 11 (expression -> exp_execfile .)
    DROP            reduce using rule 11 (expression -> exp_execfile .)
    DELETE          reduce using rule 11 (expression -> exp_execfile .)
    EXECFILE        reduce using rule 11 (expression -> exp_execfile .)
    HELP            reduce using rule 11 (expression -> exp_execfile .)
    SHOW            reduce using rule 11 (expression -> exp_execfile .)
    UPDATE          reduce using rule 11 (expression -> exp_execfile .)
    IMPORT          reduce using rule 11 (expression -> exp_execfile .)
    $end            reduce using rule 11 (expression -> exp_execfile .)


state 12

    (12) expression -> exp_help .

    SELECT          reduce using rule 12 (expression -> exp_help .)
    CREATE          reduce using rule 12 (expression -> exp_help .)
    INSERT          reduce using rule 12 (expression -> exp_help .)
    DROP            reduce using rule 12 (expression -> exp_help .)
    DELETE          reduce using rule 12 (expression -> exp_help .)
    EXECFILE        reduce using rule 12 (expression -> exp_help .)
    HELP            reduce using rule 12 (expression -> exp_help .)
    SHOW            reduce using rule 12 (expression -> exp_help .)
    UPDATE          reduce using rule 12 (expression -> exp_help .)
    IMPORT          reduce using rule 12 (expression -> exp_help .)
    $end            reduce using rule 12 (expression -> exp_help .)


state 13

    (13) expression -> exp_show .

    SELECT          reduce using rule 13 (expression -> exp_show .)
    CREATE          reduce using rule 13 (expression -> exp_show .)
    INSERT          reduce using rule 13 (expression -> exp_show .)
    DROP            reduce using rule 13 (expression -> exp_show .)
    DELETE          reduce using rule 13 (expression -> exp_show .)
    EXECFILE        reduce using rule 13 (expression -> exp_show .)
    HELP            reduce using rule 13 (expression -> exp_show .)
    SHOW            reduce using rule 13 (expression -> exp_show .)
    UPDATE          reduce using rule 13 (expression -> exp_show .)
    IMPORT          reduce using rule 13 (expression -> exp_show .)
    $end            reduce using rule 13 (expression -> exp_show .)


state 14

    (14) expression -> exp_update .

    SELECT          reduce using rule 14 (expression -> exp_update .)
    CREATE          reduce using rule 14 (expression -> exp_update .)
    INSERT          reduce using rule 14 (expression -> exp_update .)
    DROP            reduce using rule 14 (expression -> exp_update .)
    DELETE          reduce using rule 14 (expression -> exp_update .)
    EXECFILE        reduce using rule 14 (expression -> exp_update .)
    HELP            reduce using rule 14 (expression -> exp_update .)
    SHOW            reduce using rule 14 (expression -> exp_update .)
    UPDATE          reduce using rule 14 (expression -> exp_update .)
    IMPORT          reduce using rule 14 (expression -> exp_update .)
    $end            reduce using rule 14 (expression -> exp_update .)


state 15

    (15) expression -> exp_import .

    SELECT          reduce using rule 15 (expression -> exp_import .)
    CREATE          reduce using rule 15 (expression -> exp_import .)
    INSERT          reduce using rule 15 (expression -> exp_import .)
    DROP            reduce using rule 15 (expression -> exp_import .)
    DELETE          reduce using rule 15 (expression -> exp_import .)
    EXECFILE        reduce using rule 15 (expression -> exp_import .)
    HELP            reduce using rule 15 (expression -> exp_import .)
    SHOW            reduce using rule 15 (expression -> exp_import .)
    UPDATE          reduce using rule 15 (expression -> exp_import .)
    IMPORT          reduce using rule 15 (expression -> exp_import .)
    $end            reduce using rule 15 (expression -> exp_import .)


state 16

    (16) exp_exit -> EXIT . END

    END             shift and go to state 28


state 17

    (25) exp_select -> SELECT . columns FROM COLUMN END
    (26) exp_select -> SELECT . STAR FROM COLUMN END
    (27) exp_select -> SELECT . STAR FROM COLUMN WHERE exp_condition END
    (28) exp_select -> SELECT . columns FROM COLUMN WHERE exp_condition END
    (45) columns -> . COLUMN
    (46) columns -> . COLUMN COMMA columns

    STAR            shift and go to state 31
    COLUMN          shift and go to state 30

    columns                        shift and go to state 29

state 18

    (29) exp_create_table -> CREATE . TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (30) exp_create_index -> CREATE . INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END

    TABLE           shift and go to state 32
    INDEX           shift and go to state 33


state 19

    (37) exp_insert -> INSERT . INTO COLUMN exp_insert_end

    INTO            shift and go to state 34


state 20

    (19) exp_drop_table -> DROP . TABLE COLUMN END
    (22) exp_drop_index -> DROP . INDEX COLUMN END

    TABLE           shift and go to state 35
    INDEX           shift and go to state 36


state 21

    (23) exp_delete -> DELETE . FROM COLUMN END
    (24) exp_delete -> DELETE . FROM COLUMN WHERE exp_condition END

    FROM            shift and go to state 37


state 22

    (48) exp_execfile -> EXECFILE . COLUMN END

    COLUMN          shift and go to state 38


state 23

    (49) exp_help -> HELP . END

    END             shift and go to state 39


state 24

    (47) exp_show -> SHOW . END

    END             shift and go to state 40


state 25

    (17) exp_update -> UPDATE . COLUMN SET exp_assign END
    (18) exp_update -> UPDATE . COLUMN SET exp_assign WHERE exp_condition END

    COLUMN          shift and go to state 41


state 26

    (38) exp_import -> IMPORT . COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    COLUMN          shift and go to state 42


state 27

    (2) expressions -> expressions expression .

    SELECT          reduce using rule 2 (expressions -> expressions expression .)
    CREATE          reduce using rule 2 (expressions -> expressions expression .)
    INSERT          reduce using rule 2 (expressions -> expressions expression .)
    DROP            reduce using rule 2 (expressions -> expressions expression .)
    DELETE          reduce using rule 2 (expressions -> expressions expression .)
    EXECFILE        reduce using rule 2 (expressions -> expressions expression .)
    HELP            reduce using rule 2 (expressions -> expressions expression .)
    SHOW            reduce using rule 2 (expressions -> expressions expression .)
    UPDATE          reduce using rule 2 (expressions -> expressions expression .)
    IMPORT          reduce using rule 2 (expressions -> expressions expression .)
    $end            reduce using rule 2 (expressions -> expressions expression .)


state 28

    (16) exp_exit -> EXIT END .

    SELECT          reduce using rule 16 (exp_exit -> EXIT END .)
    CREATE          reduce using rule 16 (exp_exit -> EXIT END .)
    INSERT          reduce using rule 16 (exp_exit -> EXIT END .)
    DROP            reduce using rule 16 (exp_exit -> EXIT END .)
    DELETE          reduce using rule 16 (exp_exit -> EXIT END .)
    EXECFILE        reduce using rule 16 (exp_exit -> EXIT END .)
    HELP            reduce using rule 16 (exp_exit -> EXIT END .)
    SHOW            reduce using rule 16 (exp_exit -> EXIT END .)
    UPDATE          reduce using rule 16 (exp_exit -> EXIT END .)
    IMPORT          reduce using rule 16 (exp_exit -> EXIT END .)
    $end            reduce using rule 16 (exp_exit -> EXIT END .)


state 29

    (25) exp_select -> SELECT columns . FROM COLUMN END
    (28) exp_select -> SELECT columns . FROM COLUMN WHERE exp_condition END

    FROM            shift and go to state 43


state 30

    (45) columns -> COLUMN .
    (46) columns -> COLUMN . COMMA columns

    FROM            reduce using rule 45 (columns -> COLUMN .)
    RGPARENTH       reduce using rule 45 (columns -> COLUMN .)
    COMMA           shift and go to state 44


state 31

    (26) exp_select -> SELECT STAR . FROM COLUMN END
    (27) exp_select -> SELECT STAR . FROM COLUMN WHERE exp_condition END

    FROM            shift and go to state 45


state 32

    (29) exp_create_table -> CREATE TABLE . COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    COLUMN          shift and go to state 46


state 33

    (30) exp_create_index -> CREATE INDEX . COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END

    COLUMN          shift and go to state 47


state 34

    (37) exp_insert -> INSERT INTO . COLUMN exp_insert_end

    COLUMN          shift and go to state 48


state 35

    (19) exp_drop_table -> DROP TABLE . COLUMN END

    COLUMN          shift and go to state 49


state 36

    (22) exp_drop_index -> DROP INDEX . COLUMN END

    COLUMN          shift and go to state 50


state 37

    (23) exp_delete -> DELETE FROM . COLUMN END
    (24) exp_delete -> DELETE FROM . COLUMN WHERE exp_condition END

    COLUMN          shift and go to state 51


state 38

    (48) exp_execfile -> EXECFILE COLUMN . END

    END             shift and go to state 52


state 39

    (49) exp_help -> HELP END .

    SELECT          reduce using rule 49 (exp_help -> HELP END .)
    CREATE          reduce using rule 49 (exp_help -> HELP END .)
    INSERT          reduce using rule 49 (exp_help -> HELP END .)
    DROP            reduce using rule 49 (exp_help -> HELP END .)
    DELETE          reduce using rule 49 (exp_help -> HELP END .)
    EXECFILE        reduce using rule 49 (exp_help -> HELP END .)
    HELP            reduce using rule 49 (exp_help -> HELP END .)
    SHOW            reduce using rule 49 (exp_help -> HELP END .)
    UPDATE          reduce using rule 49 (exp_help -> HELP END .)
    IMPORT          reduce using rule 49 (exp_help -> HELP END .)
    $end            reduce using rule 49 (exp_help -> HELP END .)


state 40

    (47) exp_show -> SHOW END .

    SELECT          reduce using rule 47 (exp_show -> SHOW END .)
    CREATE          reduce using rule 47 (exp_show -> SHOW END .)
    INSERT          reduce using rule 47 (exp_show -> SHOW END .)
    DROP            reduce using rule 47 (exp_show -> SHOW END .)
    DELETE          reduce using rule 47 (exp_show -> SHOW END .)
    EXECFILE        reduce using rule 47 (exp_show -> SHOW END .)
    HELP            reduce using rule 47 (exp_show -> SHOW END .)
    SHOW            reduce using rule 47 (exp_show -> SHOW END .)
    UPDATE          reduce using rule 47 (exp_show -> SHOW END .)
    IMPORT          reduce using rule 47 (exp_show -> SHOW END .)
    $end            reduce using rule 47 (exp_show -> SHOW END .)


state 41

    (17) exp_update -> UPDATE COLUMN . SET exp_assign END
    (18) exp_update -> UPDATE COLUMN . SET exp_assign WHERE exp_condition END

    SET             shift and go to state 53


state 42

    (38) exp_import -> IMPORT COLUMN . FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    FROM            shift and go to state 54


state 43

    (25) exp_select -> SELECT columns FROM . COLUMN END
    (28) exp_select -> SELECT columns FROM . COLUMN WHERE exp_condition END

    COLUMN          shift and go to state 55


state 44

    (46) columns -> COLUMN COMMA . columns
    (45) columns -> . COLUMN
    (46) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 30

    columns                        shift and go to state 56

state 45

    (26) exp_select -> SELECT STAR FROM . COLUMN END
    (27) exp_select -> SELECT STAR FROM . COLUMN WHERE exp_condition END

    COLUMN          shift and go to state 57


state 46

    (29) exp_create_table -> CREATE TABLE COLUMN . LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    LFPARENTH       shift and go to state 58


state 47

    (30) exp_create_index -> CREATE INDEX COLUMN . ON COLUMN LFPARENTH COLUMN RGPARENTH END

    ON              shift and go to state 59


state 48

    (37) exp_insert -> INSERT INTO COLUMN . exp_insert_end
    (43) exp_insert_end -> . VALUES LFPARENTH columns RGPARENTH END
    (44) exp_insert_end -> . LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END

    VALUES          shift and go to state 61
    LFPARENTH       shift and go to state 62

    exp_insert_end                 shift and go to state 60

state 49

    (19) exp_drop_table -> DROP TABLE COLUMN . END

    END             shift and go to state 63


state 50

    (22) exp_drop_index -> DROP INDEX COLUMN . END

    END             shift and go to state 64


state 51

    (23) exp_delete -> DELETE FROM COLUMN . END
    (24) exp_delete -> DELETE FROM COLUMN . WHERE exp_condition END

    END             shift and go to state 65
    WHERE           shift and go to state 66


state 52

    (48) exp_execfile -> EXECFILE COLUMN END .

    SELECT          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    CREATE          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    INSERT          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    DROP            reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    DELETE          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    EXECFILE        reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    HELP            reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    SHOW            reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    UPDATE          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    IMPORT          reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)
    $end            reduce using rule 48 (exp_execfile -> EXECFILE COLUMN END .)


state 53

    (17) exp_update -> UPDATE COLUMN SET . exp_assign END
    (18) exp_update -> UPDATE COLUMN SET . exp_assign WHERE exp_condition END
    (20) exp_assign -> . COLUMN EQUAL COLUMN
    (21) exp_assign -> . COLUMN EQUAL COLUMN COMMA exp_assign

    COLUMN          shift and go to state 67

    exp_assign                     shift and go to state 68

state 54

    (38) exp_import -> IMPORT COLUMN FROM . COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    COLUMN          shift and go to state 69


state 55

    (25) exp_select -> SELECT columns FROM COLUMN . END
    (28) exp_select -> SELECT columns FROM COLUMN . WHERE exp_condition END

    END             shift and go to state 70
    WHERE           shift and go to state 71


state 56

    (46) columns -> COLUMN COMMA columns .

    FROM            reduce using rule 46 (columns -> COLUMN COMMA columns .)
    RGPARENTH       reduce using rule 46 (columns -> COLUMN COMMA columns .)


state 57

    (26) exp_select -> SELECT STAR FROM COLUMN . END
    (27) exp_select -> SELECT STAR FROM COLUMN . WHERE exp_condition END

    END             shift and go to state 72
    WHERE           shift and go to state 73


state 58

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH . exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (31) exp_attributes -> . exp_attribute
    (32) exp_attributes -> . exp_attributes COMMA exp_attribute
    (33) exp_attribute -> . COLUMN TYPE
    (34) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH
    (35) exp_attribute -> . COLUMN TYPE UNIQUE
    (36) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE

    COLUMN          shift and go to state 74

    exp_attributes                 shift and go to state 75
    exp_attribute                  shift and go to state 76

state 59

    (30) exp_create_index -> CREATE INDEX COLUMN ON . COLUMN LFPARENTH COLUMN RGPARENTH END

    COLUMN          shift and go to state 77


state 60

    (37) exp_insert -> INSERT INTO COLUMN exp_insert_end .

    SELECT          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    CREATE          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    INSERT          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    DROP            reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    DELETE          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    EXECFILE        reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    HELP            reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    SHOW            reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    UPDATE          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    IMPORT          reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    $end            reduce using rule 37 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)


state 61

    (43) exp_insert_end -> VALUES . LFPARENTH columns RGPARENTH END

    LFPARENTH       shift and go to state 78


state 62

    (44) exp_insert_end -> LFPARENTH . columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END
    (45) columns -> . COLUMN
    (46) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 30

    columns                        shift and go to state 79

state 63

    (19) exp_drop_table -> DROP TABLE COLUMN END .

    SELECT          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    CREATE          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    INSERT          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    DROP            reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    DELETE          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    EXECFILE        reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    HELP            reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    SHOW            reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    UPDATE          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    IMPORT          reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)
    $end            reduce using rule 19 (exp_drop_table -> DROP TABLE COLUMN END .)


state 64

    (22) exp_drop_index -> DROP INDEX COLUMN END .

    SELECT          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    CREATE          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    INSERT          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    DROP            reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    DELETE          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    EXECFILE        reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    HELP            reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    SHOW            reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    UPDATE          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    IMPORT          reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)
    $end            reduce using rule 22 (exp_drop_index -> DROP INDEX COLUMN END .)


state 65

    (23) exp_delete -> DELETE FROM COLUMN END .

    SELECT          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    CREATE          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    INSERT          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    DROP            reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    DELETE          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    EXECFILE        reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    HELP            reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    SHOW            reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    UPDATE          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    IMPORT          reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)
    $end            reduce using rule 23 (exp_delete -> DELETE FROM COLUMN END .)


state 66

    (24) exp_delete -> DELETE FROM COLUMN WHERE . exp_condition END
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 81

state 67

    (20) exp_assign -> COLUMN . EQUAL COLUMN
    (21) exp_assign -> COLUMN . EQUAL COLUMN COMMA exp_assign

    EQUAL           shift and go to state 82


state 68

    (17) exp_update -> UPDATE COLUMN SET exp_assign . END
    (18) exp_update -> UPDATE COLUMN SET exp_assign . WHERE exp_condition END

    END             shift and go to state 83
    WHERE           shift and go to state 84


state 69

    (38) exp_import -> IMPORT COLUMN FROM COLUMN . LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    LFPARENTH       shift and go to state 85


state 70

    (25) exp_select -> SELECT columns FROM COLUMN END .

    SELECT          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    CREATE          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    INSERT          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    DROP            reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    DELETE          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    EXECFILE        reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    HELP            reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    SHOW            reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    UPDATE          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    IMPORT          reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)
    $end            reduce using rule 25 (exp_select -> SELECT columns FROM COLUMN END .)


state 71

    (28) exp_select -> SELECT columns FROM COLUMN WHERE . exp_condition END
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 86

state 72

    (26) exp_select -> SELECT STAR FROM COLUMN END .

    SELECT          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    CREATE          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    INSERT          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    DROP            reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    DELETE          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    EXECFILE        reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    HELP            reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    SHOW            reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    UPDATE          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    IMPORT          reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)
    $end            reduce using rule 26 (exp_select -> SELECT STAR FROM COLUMN END .)


state 73

    (27) exp_select -> SELECT STAR FROM COLUMN WHERE . exp_condition END
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 87

state 74

    (33) exp_attribute -> COLUMN . TYPE
    (34) exp_attribute -> COLUMN . CHAR LFPARENTH COLUMN RGPARENTH
    (35) exp_attribute -> COLUMN . TYPE UNIQUE
    (36) exp_attribute -> COLUMN . CHAR LFPARENTH COLUMN RGPARENTH UNIQUE

    TYPE            shift and go to state 88
    CHAR            shift and go to state 89


state 75

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes . COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (32) exp_attributes -> exp_attributes . COMMA exp_attribute

    COMMA           shift and go to state 90


state 76

    (31) exp_attributes -> exp_attribute .

    COMMA           reduce using rule 31 (exp_attributes -> exp_attribute .)


state 77

    (30) exp_create_index -> CREATE INDEX COLUMN ON COLUMN . LFPARENTH COLUMN RGPARENTH END

    LFPARENTH       shift and go to state 91


state 78

    (43) exp_insert_end -> VALUES LFPARENTH . columns RGPARENTH END
    (45) columns -> . COLUMN
    (46) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 30

    columns                        shift and go to state 92

state 79

    (44) exp_insert_end -> LFPARENTH columns . RGPARENTH VALUES LFPARENTH columns RGPARENTH END

    RGPARENTH       shift and go to state 93


state 80

    (39) exp_condition -> COLUMN . OP COLUMN
    (40) exp_condition -> COLUMN . OP COLUMN AND exp_condition
    (41) exp_condition -> COLUMN . EQUAL COLUMN
    (42) exp_condition -> COLUMN . EQUAL COLUMN AND exp_condition

    OP              shift and go to state 94
    EQUAL           shift and go to state 95


state 81

    (24) exp_delete -> DELETE FROM COLUMN WHERE exp_condition . END

    END             shift and go to state 96


state 82

    (20) exp_assign -> COLUMN EQUAL . COLUMN
    (21) exp_assign -> COLUMN EQUAL . COLUMN COMMA exp_assign

    COLUMN          shift and go to state 97


state 83

    (17) exp_update -> UPDATE COLUMN SET exp_assign END .

    SELECT          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    CREATE          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    INSERT          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    DROP            reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    DELETE          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    EXECFILE        reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    HELP            reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    SHOW            reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    UPDATE          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    IMPORT          reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)
    $end            reduce using rule 17 (exp_update -> UPDATE COLUMN SET exp_assign END .)


state 84

    (18) exp_update -> UPDATE COLUMN SET exp_assign WHERE . exp_condition END
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 98

state 85

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH . exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (31) exp_attributes -> . exp_attribute
    (32) exp_attributes -> . exp_attributes COMMA exp_attribute
    (33) exp_attribute -> . COLUMN TYPE
    (34) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH
    (35) exp_attribute -> . COLUMN TYPE UNIQUE
    (36) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE

    COLUMN          shift and go to state 74

    exp_attributes                 shift and go to state 99
    exp_attribute                  shift and go to state 76

state 86

    (28) exp_select -> SELECT columns FROM COLUMN WHERE exp_condition . END

    END             shift and go to state 100


state 87

    (27) exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition . END

    END             shift and go to state 101


state 88

    (33) exp_attribute -> COLUMN TYPE .
    (35) exp_attribute -> COLUMN TYPE . UNIQUE

    COMMA           reduce using rule 33 (exp_attribute -> COLUMN TYPE .)
    UNIQUE          shift and go to state 102


state 89

    (34) exp_attribute -> COLUMN CHAR . LFPARENTH COLUMN RGPARENTH
    (36) exp_attribute -> COLUMN CHAR . LFPARENTH COLUMN RGPARENTH UNIQUE

    LFPARENTH       shift and go to state 103


state 90

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA . PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (32) exp_attributes -> exp_attributes COMMA . exp_attribute
    (33) exp_attribute -> . COLUMN TYPE
    (34) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH
    (35) exp_attribute -> . COLUMN TYPE UNIQUE
    (36) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE

    PRIMARY         shift and go to state 104
    COLUMN          shift and go to state 74

    exp_attribute                  shift and go to state 105

state 91

    (30) exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH . COLUMN RGPARENTH END

    COLUMN          shift and go to state 106


state 92

    (43) exp_insert_end -> VALUES LFPARENTH columns . RGPARENTH END

    RGPARENTH       shift and go to state 107


state 93

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH . VALUES LFPARENTH columns RGPARENTH END

    VALUES          shift and go to state 108


state 94

    (39) exp_condition -> COLUMN OP . COLUMN
    (40) exp_condition -> COLUMN OP . COLUMN AND exp_condition

    COLUMN          shift and go to state 109


state 95

    (41) exp_condition -> COLUMN EQUAL . COLUMN
    (42) exp_condition -> COLUMN EQUAL . COLUMN AND exp_condition

    COLUMN          shift and go to state 110


state 96

    (24) exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .

    SELECT          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    CREATE          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    INSERT          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    DROP            reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    DELETE          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    EXECFILE        reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    HELP            reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    SHOW            reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    UPDATE          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    IMPORT          reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)
    $end            reduce using rule 24 (exp_delete -> DELETE FROM COLUMN WHERE exp_condition END .)


state 97

    (20) exp_assign -> COLUMN EQUAL COLUMN .
    (21) exp_assign -> COLUMN EQUAL COLUMN . COMMA exp_assign

    END             reduce using rule 20 (exp_assign -> COLUMN EQUAL COLUMN .)
    WHERE           reduce using rule 20 (exp_assign -> COLUMN EQUAL COLUMN .)
    COMMA           shift and go to state 111


state 98

    (18) exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition . END

    END             shift and go to state 112


state 99

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes . COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (32) exp_attributes -> exp_attributes . COMMA exp_attribute

    COMMA           shift and go to state 113


state 100

    (28) exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .

    SELECT          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    CREATE          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    INSERT          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    DROP            reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    DELETE          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    EXECFILE        reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    HELP            reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    SHOW            reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    UPDATE          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    IMPORT          reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    $end            reduce using rule 28 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)


state 101

    (27) exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .

    SELECT          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    CREATE          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    INSERT          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    DROP            reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    DELETE          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    EXECFILE        reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    HELP            reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    SHOW            reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    UPDATE          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    IMPORT          reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    $end            reduce using rule 27 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)


state 102

    (35) exp_attribute -> COLUMN TYPE UNIQUE .

    COMMA           reduce using rule 35 (exp_attribute -> COLUMN TYPE UNIQUE .)


state 103

    (34) exp_attribute -> COLUMN CHAR LFPARENTH . COLUMN RGPARENTH
    (36) exp_attribute -> COLUMN CHAR LFPARENTH . COLUMN RGPARENTH UNIQUE

    COLUMN          shift and go to state 114


state 104

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY . KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    KEY             shift and go to state 115


state 105

    (32) exp_attributes -> exp_attributes COMMA exp_attribute .

    COMMA           reduce using rule 32 (exp_attributes -> exp_attributes COMMA exp_attribute .)


state 106

    (30) exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN . RGPARENTH END

    RGPARENTH       shift and go to state 116


state 107

    (43) exp_insert_end -> VALUES LFPARENTH columns RGPARENTH . END

    END             shift and go to state 117


state 108

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES . LFPARENTH columns RGPARENTH END

    LFPARENTH       shift and go to state 118


state 109

    (39) exp_condition -> COLUMN OP COLUMN .
    (40) exp_condition -> COLUMN OP COLUMN . AND exp_condition

    END             reduce using rule 39 (exp_condition -> COLUMN OP COLUMN .)
    AND             shift and go to state 119


state 110

    (41) exp_condition -> COLUMN EQUAL COLUMN .
    (42) exp_condition -> COLUMN EQUAL COLUMN . AND exp_condition

    END             reduce using rule 41 (exp_condition -> COLUMN EQUAL COLUMN .)
    AND             shift and go to state 120


state 111

    (21) exp_assign -> COLUMN EQUAL COLUMN COMMA . exp_assign
    (20) exp_assign -> . COLUMN EQUAL COLUMN
    (21) exp_assign -> . COLUMN EQUAL COLUMN COMMA exp_assign

    COLUMN          shift and go to state 67

    exp_assign                     shift and go to state 121

state 112

    (18) exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .

    SELECT          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    CREATE          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    INSERT          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    DROP            reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    DELETE          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    EXECFILE        reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    HELP            reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    SHOW            reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    UPDATE          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    IMPORT          reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)
    $end            reduce using rule 18 (exp_update -> UPDATE COLUMN SET exp_assign WHERE exp_condition END .)


state 113

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA . PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END
    (32) exp_attributes -> exp_attributes COMMA . exp_attribute
    (33) exp_attribute -> . COLUMN TYPE
    (34) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH
    (35) exp_attribute -> . COLUMN TYPE UNIQUE
    (36) exp_attribute -> . COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE

    PRIMARY         shift and go to state 122
    COLUMN          shift and go to state 74

    exp_attribute                  shift and go to state 105

state 114

    (34) exp_attribute -> COLUMN CHAR LFPARENTH COLUMN . RGPARENTH
    (36) exp_attribute -> COLUMN CHAR LFPARENTH COLUMN . RGPARENTH UNIQUE

    RGPARENTH       shift and go to state 123


state 115

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY . LFPARENTH COLUMN RGPARENTH RGPARENTH END

    LFPARENTH       shift and go to state 124


state 116

    (30) exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH . END

    END             shift and go to state 125


state 117

    (43) exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .

    SELECT          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    CREATE          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    INSERT          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    DROP            reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    DELETE          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    EXECFILE        reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    HELP            reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    SHOW            reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    UPDATE          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    IMPORT          reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    $end            reduce using rule 43 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)


state 118

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH . columns RGPARENTH END
    (45) columns -> . COLUMN
    (46) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 30

    columns                        shift and go to state 126

state 119

    (40) exp_condition -> COLUMN OP COLUMN AND . exp_condition
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 127

state 120

    (42) exp_condition -> COLUMN EQUAL COLUMN AND . exp_condition
    (39) exp_condition -> . COLUMN OP COLUMN
    (40) exp_condition -> . COLUMN OP COLUMN AND exp_condition
    (41) exp_condition -> . COLUMN EQUAL COLUMN
    (42) exp_condition -> . COLUMN EQUAL COLUMN AND exp_condition

    COLUMN          shift and go to state 80

    exp_condition                  shift and go to state 128

state 121

    (21) exp_assign -> COLUMN EQUAL COLUMN COMMA exp_assign .

    END             reduce using rule 21 (exp_assign -> COLUMN EQUAL COLUMN COMMA exp_assign .)
    WHERE           reduce using rule 21 (exp_assign -> COLUMN EQUAL COLUMN COMMA exp_assign .)


state 122

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY . KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END

    KEY             shift and go to state 129


state 123

    (34) exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH .
    (36) exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH . UNIQUE

    COMMA           reduce using rule 34 (exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH .)
    UNIQUE          shift and go to state 130


state 124

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH . COLUMN RGPARENTH RGPARENTH END

    COLUMN          shift and go to state 131


state 125

    (30) exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .

    SELECT          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    CREATE          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    INSERT          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    DROP            reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    DELETE          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    EXECFILE        reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    HELP            reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    SHOW            reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    UPDATE          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    IMPORT          reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)
    $end            reduce using rule 30 (exp_create_index -> CREATE INDEX COLUMN ON COLUMN LFPARENTH COLUMN RGPARENTH END .)


state 126

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns . RGPARENTH END

    RGPARENTH       shift and go to state 132


state 127

    (40) exp_condition -> COLUMN OP COLUMN AND exp_condition .

    END             reduce using rule 40 (exp_condition -> COLUMN OP COLUMN AND exp_condition .)


state 128

    (42) exp_condition -> COLUMN EQUAL COLUMN AND exp_condition .

    END             reduce using rule 42 (exp_condition -> COLUMN EQUAL COLUMN AND exp_condition .)


state 129

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY . LFPARENTH COLUMN RGPARENTH RGPARENTH END

    LFPARENTH       shift and go to state 133


state 130

    (36) exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE .

    COMMA           reduce using rule 36 (exp_attribute -> COLUMN CHAR LFPARENTH COLUMN RGPARENTH UNIQUE .)


state 131

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN . RGPARENTH RGPARENTH END

    RGPARENTH       shift and go to state 134


state 132

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH . END

    END             shift and go to state 135


state 133

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH . COLUMN RGPARENTH RGPARENTH END

    COLUMN          shift and go to state 136


state 134

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH . RGPARENTH END

    RGPARENTH       shift and go to state 137


state 135

    (44) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .

    SELECT          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    CREATE          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    INSERT          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    DROP            reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    DELETE          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    EXECFILE        reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    HELP            reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    SHOW            reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    UPDATE          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    IMPORT          reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    $end            reduce using rule 44 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)


state 136

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN . RGPARENTH RGPARENTH END

    RGPARENTH       shift and go to state 138


state 137

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH . END

    END             shift and go to state 139


state 138

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH . RGPARENTH END

    RGPARENTH       shift and go to state 140


state 139

    (29) exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .

    SELECT          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    CREATE          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    INSERT          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    DROP            reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    DELETE          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    EXECFILE        reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    HELP            reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    SHOW            reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    UPDATE          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    IMPORT          reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    $end            reduce using rule 29 (exp_create_table -> CREATE TABLE COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)


state 140

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH . END

    END             shift and go to state 141


state 141

    (38) exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .

    SELECT          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    CREATE          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    INSERT          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    DROP            reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    DELETE          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    EXECFILE        reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    HELP            reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    SHOW            reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    UPDATE          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    IMPORT          reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)
    $end            reduce using rule 38 (exp_import -> IMPORT COLUMN FROM COLUMN LFPARENTH exp_attributes COMMA PRIMARY KEY LFPARENTH COLUMN RGPARENTH RGPARENTH END .)

