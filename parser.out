Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expressions
Rule 1     expressions -> expression
Rule 2     expressions -> expressions expression
Rule 3     expression -> exp_select
Rule 4     expression -> exp_create
Rule 5     expression -> exp_insert
Rule 6     exp_select -> SELECT columns FROM COLUMN END
Rule 7     exp_select -> SELECT STAR FROM COLUMN END
Rule 8     exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END
Rule 9     exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END
Rule 10    exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END
Rule 11    exp_attribute -> COLUMN TYPE
Rule 12    exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH
Rule 13    exp_attribute -> COLUMN TYPE COMMA exp_attribute
Rule 14    exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute
Rule 15    exp_insert -> INSERT INTO COLUMN exp_insert_end
Rule 16    exp_condition -> COLUMN OP COLUMN
Rule 17    exp_condition -> COLUMN OP COLUMN AND exp_condition
Rule 18    exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END
Rule 19    exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END
Rule 20    columns -> COLUMN
Rule 21    columns -> COLUMN COMMA columns

Terminals, with rules where they appear

AND                  : 17
COLUMN               : 6 7 8 9 10 11 12 12 13 14 14 15 16 16 17 17 20 21
COMMA                : 13 14 21
CREATE               : 10
END                  : 6 7 8 9 10 18 19
FROM                 : 6 7 8 9
INSERT               : 15
INTO                 : 15
LFPARENTH            : 10 12 14 18 19 19
OP                   : 16 17
RGPARENTH            : 10 12 14 18 19 19
SELECT               : 6 7 8 9
STAR                 : 7 8
TABLE                : 10
TYPE                 : 11 12 13 14
VALUES               : 18 19
WHERE                : 8 9
error                : 

Nonterminals, with rules where they appear

columns              : 6 9 18 19 19 21
exp_attribute        : 10 13 14
exp_condition        : 8 9 17
exp_create           : 4
exp_insert           : 5
exp_insert_end       : 15
exp_select           : 3
expression           : 1 2
expressions          : 2 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (1) expressions -> . expression
    (2) expressions -> . expressions expression
    (3) expression -> . exp_select
    (4) expression -> . exp_create
    (5) expression -> . exp_insert
    (6) exp_select -> . SELECT columns FROM COLUMN END
    (7) exp_select -> . SELECT STAR FROM COLUMN END
    (8) exp_select -> . SELECT STAR FROM COLUMN WHERE exp_condition END
    (9) exp_select -> . SELECT columns FROM COLUMN WHERE exp_condition END
    (10) exp_create -> . CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END
    (15) exp_insert -> . INSERT INTO COLUMN exp_insert_end

    SELECT          shift and go to state 6
    CREATE          shift and go to state 7
    INSERT          shift and go to state 8

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    exp_select                     shift and go to state 3
    exp_create                     shift and go to state 4
    exp_insert                     shift and go to state 5

state 1

    (0) S' -> expressions .
    (2) expressions -> expressions . expression
    (3) expression -> . exp_select
    (4) expression -> . exp_create
    (5) expression -> . exp_insert
    (6) exp_select -> . SELECT columns FROM COLUMN END
    (7) exp_select -> . SELECT STAR FROM COLUMN END
    (8) exp_select -> . SELECT STAR FROM COLUMN WHERE exp_condition END
    (9) exp_select -> . SELECT columns FROM COLUMN WHERE exp_condition END
    (10) exp_create -> . CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END
    (15) exp_insert -> . INSERT INTO COLUMN exp_insert_end

    SELECT          shift and go to state 6
    CREATE          shift and go to state 7
    INSERT          shift and go to state 8

    expression                     shift and go to state 9
    exp_select                     shift and go to state 3
    exp_create                     shift and go to state 4
    exp_insert                     shift and go to state 5

state 2

    (1) expressions -> expression .

    SELECT          reduce using rule 1 (expressions -> expression .)
    CREATE          reduce using rule 1 (expressions -> expression .)
    INSERT          reduce using rule 1 (expressions -> expression .)
    $end            reduce using rule 1 (expressions -> expression .)


state 3

    (3) expression -> exp_select .

    SELECT          reduce using rule 3 (expression -> exp_select .)
    CREATE          reduce using rule 3 (expression -> exp_select .)
    INSERT          reduce using rule 3 (expression -> exp_select .)
    $end            reduce using rule 3 (expression -> exp_select .)


state 4

    (4) expression -> exp_create .

    SELECT          reduce using rule 4 (expression -> exp_create .)
    CREATE          reduce using rule 4 (expression -> exp_create .)
    INSERT          reduce using rule 4 (expression -> exp_create .)
    $end            reduce using rule 4 (expression -> exp_create .)


state 5

    (5) expression -> exp_insert .

    SELECT          reduce using rule 5 (expression -> exp_insert .)
    CREATE          reduce using rule 5 (expression -> exp_insert .)
    INSERT          reduce using rule 5 (expression -> exp_insert .)
    $end            reduce using rule 5 (expression -> exp_insert .)


state 6

    (6) exp_select -> SELECT . columns FROM COLUMN END
    (7) exp_select -> SELECT . STAR FROM COLUMN END
    (8) exp_select -> SELECT . STAR FROM COLUMN WHERE exp_condition END
    (9) exp_select -> SELECT . columns FROM COLUMN WHERE exp_condition END
    (20) columns -> . COLUMN
    (21) columns -> . COLUMN COMMA columns

    STAR            shift and go to state 12
    COLUMN          shift and go to state 11

    columns                        shift and go to state 10

state 7

    (10) exp_create -> CREATE . TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END

    TABLE           shift and go to state 13


state 8

    (15) exp_insert -> INSERT . INTO COLUMN exp_insert_end

    INTO            shift and go to state 14


state 9

    (2) expressions -> expressions expression .

    SELECT          reduce using rule 2 (expressions -> expressions expression .)
    CREATE          reduce using rule 2 (expressions -> expressions expression .)
    INSERT          reduce using rule 2 (expressions -> expressions expression .)
    $end            reduce using rule 2 (expressions -> expressions expression .)


state 10

    (6) exp_select -> SELECT columns . FROM COLUMN END
    (9) exp_select -> SELECT columns . FROM COLUMN WHERE exp_condition END

    FROM            shift and go to state 15


state 11

    (20) columns -> COLUMN .
    (21) columns -> COLUMN . COMMA columns

    FROM            reduce using rule 20 (columns -> COLUMN .)
    RGPARENTH       reduce using rule 20 (columns -> COLUMN .)
    COMMA           shift and go to state 16


state 12

    (7) exp_select -> SELECT STAR . FROM COLUMN END
    (8) exp_select -> SELECT STAR . FROM COLUMN WHERE exp_condition END

    FROM            shift and go to state 17


state 13

    (10) exp_create -> CREATE TABLE . COLUMN LFPARENTH exp_attribute RGPARENTH END

    COLUMN          shift and go to state 18


state 14

    (15) exp_insert -> INSERT INTO . COLUMN exp_insert_end

    COLUMN          shift and go to state 19


state 15

    (6) exp_select -> SELECT columns FROM . COLUMN END
    (9) exp_select -> SELECT columns FROM . COLUMN WHERE exp_condition END

    COLUMN          shift and go to state 20


state 16

    (21) columns -> COLUMN COMMA . columns
    (20) columns -> . COLUMN
    (21) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 11

    columns                        shift and go to state 21

state 17

    (7) exp_select -> SELECT STAR FROM . COLUMN END
    (8) exp_select -> SELECT STAR FROM . COLUMN WHERE exp_condition END

    COLUMN          shift and go to state 22


state 18

    (10) exp_create -> CREATE TABLE COLUMN . LFPARENTH exp_attribute RGPARENTH END

    LFPARENTH       shift and go to state 23


state 19

    (15) exp_insert -> INSERT INTO COLUMN . exp_insert_end
    (18) exp_insert_end -> . VALUES LFPARENTH columns RGPARENTH END
    (19) exp_insert_end -> . LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END

    VALUES          shift and go to state 25
    LFPARENTH       shift and go to state 26

    exp_insert_end                 shift and go to state 24

state 20

    (6) exp_select -> SELECT columns FROM COLUMN . END
    (9) exp_select -> SELECT columns FROM COLUMN . WHERE exp_condition END

    END             shift and go to state 27
    WHERE           shift and go to state 28


state 21

    (21) columns -> COLUMN COMMA columns .

    FROM            reduce using rule 21 (columns -> COLUMN COMMA columns .)
    RGPARENTH       reduce using rule 21 (columns -> COLUMN COMMA columns .)


state 22

    (7) exp_select -> SELECT STAR FROM COLUMN . END
    (8) exp_select -> SELECT STAR FROM COLUMN . WHERE exp_condition END

    END             shift and go to state 29
    WHERE           shift and go to state 30


state 23

    (10) exp_create -> CREATE TABLE COLUMN LFPARENTH . exp_attribute RGPARENTH END
    (11) exp_attribute -> . COLUMN TYPE
    (12) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH
    (13) exp_attribute -> . COLUMN TYPE COMMA exp_attribute
    (14) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute

    COLUMN          shift and go to state 31

    exp_attribute                  shift and go to state 32

state 24

    (15) exp_insert -> INSERT INTO COLUMN exp_insert_end .

    SELECT          reduce using rule 15 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    CREATE          reduce using rule 15 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    INSERT          reduce using rule 15 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)
    $end            reduce using rule 15 (exp_insert -> INSERT INTO COLUMN exp_insert_end .)


state 25

    (18) exp_insert_end -> VALUES . LFPARENTH columns RGPARENTH END

    LFPARENTH       shift and go to state 33


state 26

    (19) exp_insert_end -> LFPARENTH . columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END
    (20) columns -> . COLUMN
    (21) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 11

    columns                        shift and go to state 34

state 27

    (6) exp_select -> SELECT columns FROM COLUMN END .

    SELECT          reduce using rule 6 (exp_select -> SELECT columns FROM COLUMN END .)
    CREATE          reduce using rule 6 (exp_select -> SELECT columns FROM COLUMN END .)
    INSERT          reduce using rule 6 (exp_select -> SELECT columns FROM COLUMN END .)
    $end            reduce using rule 6 (exp_select -> SELECT columns FROM COLUMN END .)


state 28

    (9) exp_select -> SELECT columns FROM COLUMN WHERE . exp_condition END
    (16) exp_condition -> . COLUMN OP COLUMN
    (17) exp_condition -> . COLUMN OP COLUMN AND exp_condition

    COLUMN          shift and go to state 35

    exp_condition                  shift and go to state 36

state 29

    (7) exp_select -> SELECT STAR FROM COLUMN END .

    SELECT          reduce using rule 7 (exp_select -> SELECT STAR FROM COLUMN END .)
    CREATE          reduce using rule 7 (exp_select -> SELECT STAR FROM COLUMN END .)
    INSERT          reduce using rule 7 (exp_select -> SELECT STAR FROM COLUMN END .)
    $end            reduce using rule 7 (exp_select -> SELECT STAR FROM COLUMN END .)


state 30

    (8) exp_select -> SELECT STAR FROM COLUMN WHERE . exp_condition END
    (16) exp_condition -> . COLUMN OP COLUMN
    (17) exp_condition -> . COLUMN OP COLUMN AND exp_condition

    COLUMN          shift and go to state 35

    exp_condition                  shift and go to state 37

state 31

    (11) exp_attribute -> COLUMN . TYPE
    (12) exp_attribute -> COLUMN . TYPE LFPARENTH COLUMN RGPARENTH
    (13) exp_attribute -> COLUMN . TYPE COMMA exp_attribute
    (14) exp_attribute -> COLUMN . TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute

    TYPE            shift and go to state 38


state 32

    (10) exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute . RGPARENTH END

    RGPARENTH       shift and go to state 39


state 33

    (18) exp_insert_end -> VALUES LFPARENTH . columns RGPARENTH END
    (20) columns -> . COLUMN
    (21) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 11

    columns                        shift and go to state 40

state 34

    (19) exp_insert_end -> LFPARENTH columns . RGPARENTH VALUES LFPARENTH columns RGPARENTH END

    RGPARENTH       shift and go to state 41


state 35

    (16) exp_condition -> COLUMN . OP COLUMN
    (17) exp_condition -> COLUMN . OP COLUMN AND exp_condition

    OP              shift and go to state 42


state 36

    (9) exp_select -> SELECT columns FROM COLUMN WHERE exp_condition . END

    END             shift and go to state 43


state 37

    (8) exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition . END

    END             shift and go to state 44


state 38

    (11) exp_attribute -> COLUMN TYPE .
    (12) exp_attribute -> COLUMN TYPE . LFPARENTH COLUMN RGPARENTH
    (13) exp_attribute -> COLUMN TYPE . COMMA exp_attribute
    (14) exp_attribute -> COLUMN TYPE . LFPARENTH COLUMN RGPARENTH COMMA exp_attribute

    RGPARENTH       reduce using rule 11 (exp_attribute -> COLUMN TYPE .)
    LFPARENTH       shift and go to state 45
    COMMA           shift and go to state 46


state 39

    (10) exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH . END

    END             shift and go to state 47


state 40

    (18) exp_insert_end -> VALUES LFPARENTH columns . RGPARENTH END

    RGPARENTH       shift and go to state 48


state 41

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH . VALUES LFPARENTH columns RGPARENTH END

    VALUES          shift and go to state 49


state 42

    (16) exp_condition -> COLUMN OP . COLUMN
    (17) exp_condition -> COLUMN OP . COLUMN AND exp_condition

    COLUMN          shift and go to state 50


state 43

    (9) exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .

    SELECT          reduce using rule 9 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    CREATE          reduce using rule 9 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    INSERT          reduce using rule 9 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)
    $end            reduce using rule 9 (exp_select -> SELECT columns FROM COLUMN WHERE exp_condition END .)


state 44

    (8) exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .

    SELECT          reduce using rule 8 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    CREATE          reduce using rule 8 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    INSERT          reduce using rule 8 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)
    $end            reduce using rule 8 (exp_select -> SELECT STAR FROM COLUMN WHERE exp_condition END .)


state 45

    (12) exp_attribute -> COLUMN TYPE LFPARENTH . COLUMN RGPARENTH
    (14) exp_attribute -> COLUMN TYPE LFPARENTH . COLUMN RGPARENTH COMMA exp_attribute

    COLUMN          shift and go to state 51


state 46

    (13) exp_attribute -> COLUMN TYPE COMMA . exp_attribute
    (11) exp_attribute -> . COLUMN TYPE
    (12) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH
    (13) exp_attribute -> . COLUMN TYPE COMMA exp_attribute
    (14) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute

    COLUMN          shift and go to state 31

    exp_attribute                  shift and go to state 52

state 47

    (10) exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END .

    SELECT          reduce using rule 10 (exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END .)
    CREATE          reduce using rule 10 (exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END .)
    INSERT          reduce using rule 10 (exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END .)
    $end            reduce using rule 10 (exp_create -> CREATE TABLE COLUMN LFPARENTH exp_attribute RGPARENTH END .)


state 48

    (18) exp_insert_end -> VALUES LFPARENTH columns RGPARENTH . END

    END             shift and go to state 53


state 49

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES . LFPARENTH columns RGPARENTH END

    LFPARENTH       shift and go to state 54


state 50

    (16) exp_condition -> COLUMN OP COLUMN .
    (17) exp_condition -> COLUMN OP COLUMN . AND exp_condition

    END             reduce using rule 16 (exp_condition -> COLUMN OP COLUMN .)
    AND             shift and go to state 55


state 51

    (12) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN . RGPARENTH
    (14) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN . RGPARENTH COMMA exp_attribute

    RGPARENTH       shift and go to state 56


state 52

    (13) exp_attribute -> COLUMN TYPE COMMA exp_attribute .

    RGPARENTH       reduce using rule 13 (exp_attribute -> COLUMN TYPE COMMA exp_attribute .)


state 53

    (18) exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .

    SELECT          reduce using rule 18 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    CREATE          reduce using rule 18 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    INSERT          reduce using rule 18 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)
    $end            reduce using rule 18 (exp_insert_end -> VALUES LFPARENTH columns RGPARENTH END .)


state 54

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH . columns RGPARENTH END
    (20) columns -> . COLUMN
    (21) columns -> . COLUMN COMMA columns

    COLUMN          shift and go to state 11

    columns                        shift and go to state 57

state 55

    (17) exp_condition -> COLUMN OP COLUMN AND . exp_condition
    (16) exp_condition -> . COLUMN OP COLUMN
    (17) exp_condition -> . COLUMN OP COLUMN AND exp_condition

    COLUMN          shift and go to state 35

    exp_condition                  shift and go to state 58

state 56

    (12) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH .
    (14) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH . COMMA exp_attribute

    RGPARENTH       reduce using rule 12 (exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH .)
    COMMA           shift and go to state 59


state 57

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns . RGPARENTH END

    RGPARENTH       shift and go to state 60


state 58

    (17) exp_condition -> COLUMN OP COLUMN AND exp_condition .

    END             reduce using rule 17 (exp_condition -> COLUMN OP COLUMN AND exp_condition .)


state 59

    (14) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA . exp_attribute
    (11) exp_attribute -> . COLUMN TYPE
    (12) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH
    (13) exp_attribute -> . COLUMN TYPE COMMA exp_attribute
    (14) exp_attribute -> . COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute

    COLUMN          shift and go to state 31

    exp_attribute                  shift and go to state 61

state 60

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH . END

    END             shift and go to state 62


state 61

    (14) exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute .

    RGPARENTH       reduce using rule 14 (exp_attribute -> COLUMN TYPE LFPARENTH COLUMN RGPARENTH COMMA exp_attribute .)


state 62

    (19) exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .

    SELECT          reduce using rule 19 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    CREATE          reduce using rule 19 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    INSERT          reduce using rule 19 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)
    $end            reduce using rule 19 (exp_insert_end -> LFPARENTH columns RGPARENTH VALUES LFPARENTH columns RGPARENTH END .)

